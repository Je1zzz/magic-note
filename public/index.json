[{"content":"Todo: 图像不能显示 (解决方法) 1. 下载Hugo 进入网址 Releases · gohugoio/hugo，下载相关文件\n安装完成后重启终端，输入 hugo version 可以查看下载的Hugo版本信息\n2. 初始化Hugo博客 在存储笔记文件的根目录下，输入\nhugo new site \u0026lt;your_blog_name\u0026gt; --format yml cd \u0026lt;your_blog_name\u0026gt; git init git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 随后将目录下的 \u0026lt;hugo.yml\u0026gt; 输入 theme: PaperMod\n注意：\n--format不能输入--f\n更多主题自行探索 Complete List | Hugo Themes\n3. Github配置 3.1 新建仓库并关联 先新建一个repository，选择Public公开\n然后将项目关联到远程，以下为web关联，也可以选择更稳定的ssh：\ngit remote add origin https://github.com/username/\u0026lt;your_blog_name\u0026gt;.git git branch -M main 3.2 创建文章并测试 hugo new post/test.md hugo server -D 3.3 新建分支 在Github项目仓中，创建新的分支\n4. 部署Github Action 4.1 填写deploy.yml文件 在项目的\u0026lt; hugo.yml \u0026gt;中，将baseURL设置为\nbaseURL: https://\u0026lt;username\u0026gt;.github.io/\u0026lt;your_blog_name\u0026gt;/ 注意： 最后的斜杠也不能省去\n并在目录下创建 .github/workflows/deploy.yml\n填入如下：\nname: deploy on: push: branches: [\u0026#34;main\u0026#34;] workflow_dispatch: # schedule: # # Runs everyday at 8:00 AM # - cron: \u0026#34;0 0 * * *\u0026#34; # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages permissions: contents: read pages: write id-token: write # Allow one concurrent deployment concurrency: group: \u0026#34;pages\u0026#34; cancel-in-progress: true # Default to bash defaults: run: shell: bash jobs: # BUild job build: runs-on: ubuntu-latest env: HUGO_VERSION: latest TZ: America/Los_Angeles steps: - name: Checkout uses: actions/checkout@v3 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo id: pages uses: peaceiris/actions-hugo@v2 with: hugo-version: latest extended: true - name: Build Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: hugo --minify - name: Deploy Web id: deployment uses: peaceiris/actions-gh-pages@v3 with: PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }} EXTERNAL_REPOSITORY: Je1zzz/magic-note PUBLISH_BRANCH: gh-pages PUBLISH_DIR: ./public commit_message: ${{ github.event.head_commit.message }} 注意：需要更改的是最后的 \u0026lt; EXTERNAL_REPOSITORY \u0026gt;。\n4.2 设置token 打开网址Personal Access Tokens (Classic)，生成token后复制\n然后在github的项目设置中写入secret\n5. 测试 先设置当前分支 main 跟踪远程的 origin/main 分支\ngit branch --set-upstream-to=origin/main main 先合并不相关目录\ngit pull origin main --allow-unrelated-histories 上传\ngit add . git commit -m \u0026#34;first commit\u0026#34; git push 可以在Actions看见已经成功了\n打开网址\n6. 上传新笔记 在archetypes中创建一个\u0026lt;post.md\u0026gt;，复制以下（模板）：\n--- title: \u0026#34;{{ .File.ContentBaseName | title }}\u0026#34; # 标题，去掉横短线病转换为标题格式 date: {{ .Date }} # 发布日期 tags: [] # 分类和标记，用于过滤 author: \u0026#34;zhm\u0026#34; # 作者 # author: [\u0026#34;Me\u0026#34;, \u0026#34;You\u0026#34;] # multiple authors showToc: true # 显示目录 TocOpen: false # 默认展开 draft: false # 是否为草稿（True则会发布） hidemeta: false # 隐藏元信息（作者、发布日期等） comments: false # 是否comments description: \u0026#34;\u0026#34; # 文章描述 canonicalURL: \u0026#34;https://canonical.url/to/page\u0026#34; # idk disableShare: false # 禁止分享 disableHLJS: false # 禁用代码高亮 hideSummary: false # 隐藏文章摘要 searchHidden: false # 在search里隐藏文章 ShowReadingTime: true # 显示阅读时间 ShowBreadCrumbs: true # 显示面包屑导航 ShowPostNavLinks: true # 显示文章导航（下一篇，上一篇） ShowWordCount: true # 字数统计 ShowRssButtonInSectionTermList: true # idk UseHugoToc: true # 使用Hugo生成的目录 math: true --- 然后使用hugo new post/xx.md 生成一篇文章，复制里面的头信息\n将笔记已以下形式存储好，一个md文件以及一个专门存储该md文件的图像的文件夹\n然后将md文件拖入到post里，再将image文件拖入到static里。复制头信息到最前面， 并更改文件中图像文件的格式，可以按CTRL+F2一起修改路径，修改为/folder_name/xx.#center\n随后进行预览和上传\n# 预览 hugo server -D # 上传 git add . git commit -m \u0026#34;update passage XX\u0026#34; git push 参考 [1] Hugo如何在markdown里引用本地图片 - Jincheng9\u0026rsquo;s blog\n[2] hugo+Stack 搭建个人博客\n","permalink":"http://localhost:1313/magic-note/post/post1/","summary":"Todo: 图像不能显示 (解决方法) 1. 下载Hugo 进入网址 Releases · gohugoio/hugo，下载相关文件\n安装完成后重启终端，输入 hugo version 可以查看下载的Hugo版本信息\n2. 初始化Hugo博客 在存储笔记文件的根目录下，输入\nhugo new site \u0026lt;your_blog_name\u0026gt; --format yml cd \u0026lt;your_blog_name\u0026gt; git init git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 随后将目录下的 \u0026lt;hugo.yml\u0026gt; 输入 theme: PaperMod\n注意：\n--format不能输入--f\n更多主题自行探索 Complete List | Hugo Themes\n3. Github配置 3.1 新建仓库并关联 先新建一个repository，选择Public公开\n然后将项目关联到远程，以下为web关联，也可以选择更稳定的ssh：\ngit remote add origin https://github.com/username/\u0026lt;your_blog_name\u0026gt;.git git branch -M main 3.2 创建文章并测试 hugo new post/test.md hugo server -D 3.3 新建分支 在Github项目仓中，创建新的分支","title":"Hugo + Github pages制作个人学习博客"}]